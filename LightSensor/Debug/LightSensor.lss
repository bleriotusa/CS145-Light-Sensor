
LightSensor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000902  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000012  00800060  00000902  00000996  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000014  00800072  00800072  000009a8  2**0
                  ALLOC
  3 .stab         00000c84  00000000  00000000  000009a8  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000001fe  00000000  00000000  0000162c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  0000182a  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 00000148  00000000  00000000  00001859  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0000123c  00000000  00000000  000019a1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000838  00000000  00000000  00002bdd  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00001632  00000000  00000000  00003415  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000298  00000000  00000000  00004a48  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000b0c1  00000000  00000000  00004ce0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00000a98  00000000  00000000  0000fda1  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 000000f0  00000000  00000000  00010839  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_macro  00002c84  00000000  00000000  00010929  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	29 c0       	rjmp	.+82     	; 0x54 <__ctors_end>
   2:	00 00       	nop
   4:	42 c0       	rjmp	.+132    	; 0x8a <__bad_interrupt>
   6:	00 00       	nop
   8:	40 c0       	rjmp	.+128    	; 0x8a <__bad_interrupt>
   a:	00 00       	nop
   c:	3e c0       	rjmp	.+124    	; 0x8a <__bad_interrupt>
   e:	00 00       	nop
  10:	3c c0       	rjmp	.+120    	; 0x8a <__bad_interrupt>
  12:	00 00       	nop
  14:	3a c0       	rjmp	.+116    	; 0x8a <__bad_interrupt>
  16:	00 00       	nop
  18:	38 c0       	rjmp	.+112    	; 0x8a <__bad_interrupt>
  1a:	00 00       	nop
  1c:	1e c1       	rjmp	.+572    	; 0x25a <__vector_7>
  1e:	00 00       	nop
  20:	34 c0       	rjmp	.+104    	; 0x8a <__bad_interrupt>
  22:	00 00       	nop
  24:	32 c0       	rjmp	.+100    	; 0x8a <__bad_interrupt>
  26:	00 00       	nop
  28:	30 c0       	rjmp	.+96     	; 0x8a <__bad_interrupt>
  2a:	00 00       	nop
  2c:	2e c0       	rjmp	.+92     	; 0x8a <__bad_interrupt>
  2e:	00 00       	nop
  30:	2c c0       	rjmp	.+88     	; 0x8a <__bad_interrupt>
  32:	00 00       	nop
  34:	2a c0       	rjmp	.+84     	; 0x8a <__bad_interrupt>
  36:	00 00       	nop
  38:	28 c0       	rjmp	.+80     	; 0x8a <__bad_interrupt>
  3a:	00 00       	nop
  3c:	26 c0       	rjmp	.+76     	; 0x8a <__bad_interrupt>
  3e:	00 00       	nop
  40:	24 c0       	rjmp	.+72     	; 0x8a <__bad_interrupt>
  42:	00 00       	nop
  44:	22 c0       	rjmp	.+68     	; 0x8a <__bad_interrupt>
  46:	00 00       	nop
  48:	20 c0       	rjmp	.+64     	; 0x8a <__bad_interrupt>
  4a:	00 00       	nop
  4c:	1e c0       	rjmp	.+60     	; 0x8a <__bad_interrupt>
  4e:	00 00       	nop
  50:	1c c0       	rjmp	.+56     	; 0x8a <__bad_interrupt>
	...

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e2 e0       	ldi	r30, 0x02	; 2
  68:	f9 e0       	ldi	r31, 0x09	; 9
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a2 37       	cpi	r26, 0x72	; 114
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a2 e7       	ldi	r26, 0x72	; 114
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a6 38       	cpi	r26, 0x86	; 134
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	5c d1       	rcall	.+696    	; 0x340 <main>
  88:	3a c4       	rjmp	.+2164   	; 0x8fe <_exit>

0000008a <__bad_interrupt>:
  8a:	ba cf       	rjmp	.-140    	; 0x0 <__vectors>

0000008c <ini_avr>:


void
ini_avr(void)
{
	WDTCR = 15;
  8c:	8f e0       	ldi	r24, 0x0F	; 15
  8e:	81 bd       	out	0x21, r24	; 33
	
	SET_BIT(DDRA, 0);
  90:	d0 9a       	sbi	0x1a, 0	; 26
	
	CLR_BIT(DDRC, 4);
  92:	a4 98       	cbi	0x14, 4	; 20
	CLR_BIT(DDRC, 5);
  94:	a5 98       	cbi	0x14, 5	; 20
	CLR_BIT(DDRC, 6);
  96:	a6 98       	cbi	0x14, 6	; 20
	CLR_BIT(DDRC, 7);
  98:	a7 98       	cbi	0x14, 7	; 20
	SET_BIT(DDRC, 0);
  9a:	a0 9a       	sbi	0x14, 0	; 20
	SET_BIT(DDRC, 1);
  9c:	a1 9a       	sbi	0x14, 1	; 20
	SET_BIT(DDRC, 2);
  9e:	a2 9a       	sbi	0x14, 2	; 20
	SET_BIT(DDRC, 3);
  a0:	a3 9a       	sbi	0x14, 3	; 20
  a2:	08 95       	ret

000000a4 <wait_avr>:


void
wait_avr(unsigned short msec)
{
  TCCR0 = 3;
  a4:	23 e0       	ldi	r18, 0x03	; 3
  a6:	23 bf       	out	0x33, r18	; 51
  while (msec--) {
    TCNT0 = (unsigned char)(256 - (XTAL_FRQ / 64) * .001);
  a8:	33 e8       	ldi	r19, 0x83	; 131

void
wait_avr(unsigned short msec)
{
  TCCR0 = 3;
  while (msec--) {
  aa:	08 c0       	rjmp	.+16     	; 0xbc <wait_avr+0x18>
    TCNT0 = (unsigned char)(256 - (XTAL_FRQ / 64) * .001);
  ac:	32 bf       	out	0x32, r19	; 50
    SET_BIT(TIFR, TOV0);
  ae:	28 b7       	in	r18, 0x38	; 56
  b0:	21 60       	ori	r18, 0x01	; 1
  b2:	28 bf       	out	0x38, r18	; 56
    WDR();
  b4:	a8 95       	wdr
    while (!GET_BIT(TIFR, TOV0));
  b6:	08 b6       	in	r0, 0x38	; 56
  b8:	00 fe       	sbrs	r0, 0
  ba:	fd cf       	rjmp	.-6      	; 0xb6 <wait_avr+0x12>

void
wait_avr(unsigned short msec)
{
  TCCR0 = 3;
  while (msec--) {
  bc:	01 97       	sbiw	r24, 0x01	; 1
  be:	b0 f7       	brcc	.-20     	; 0xac <wait_avr+0x8>
    TCNT0 = (unsigned char)(256 - (XTAL_FRQ / 64) * .001);
    SET_BIT(TIFR, TOV0);
    WDR();
    while (!GET_BIT(TIFR, TOV0));
  }
  TCCR0 = 0;
  c0:	13 be       	out	0x33, r1	; 51
  c2:	08 95       	ret

000000c4 <setupInterrupt>:
// 	SET_BIT(TIMSK, OCIE0);
// 	SET_BIT(TCCR0, WGM01); 
// 	
// 	sei();
	
	cli();
  c4:	f8 94       	cli
	
	TCCR1B = 13;
  c6:	2d e0       	ldi	r18, 0x0D	; 13
  c8:	2e bd       	out	0x2e, r18	; 46
	OCR1A = msec;
  ca:	9b bd       	out	0x2b, r25	; 43
  cc:	8a bd       	out	0x2a, r24	; 42
	SET_BIT(TIMSK, OCIE1A);
  ce:	89 b7       	in	r24, 0x39	; 57
  d0:	80 61       	ori	r24, 0x10	; 16
  d2:	89 bf       	out	0x39, r24	; 57
	
	sei();
  d4:	78 94       	sei
  d6:	08 95       	ret

000000d8 <output>:
{
  char c;
  while ((c = pgm_read_byte(s++)) != 0) {
    write(c, 1);
  }
}
  d8:	66 23       	and	r22, r22
  da:	11 f0       	breq	.+4      	; 0xe0 <output+0x8>
  dc:	c2 9a       	sbi	0x18, 2	; 24
  de:	01 c0       	rjmp	.+2      	; 0xe2 <output+0xa>
  e0:	c2 98       	cbi	0x18, 2	; 24
  e2:	c3 98       	cbi	0x18, 3	; 24
  e4:	82 bb       	out	0x12, r24	; 18
  e6:	8f ef       	ldi	r24, 0xFF	; 255
  e8:	81 bb       	out	0x11, r24	; 17
  ea:	c4 9a       	sbi	0x18, 4	; 24
  ec:	00 00       	nop
  ee:	00 00       	nop
  f0:	00 00       	nop
  f2:	c4 98       	cbi	0x18, 4	; 24
  f4:	08 95       	ret

000000f6 <write>:
  f6:	c2 98       	cbi	0x18, 2	; 24
  f8:	c3 9a       	sbi	0x18, 3	; 24
  fa:	11 ba       	out	0x11, r1	; 17
  fc:	90 b3       	in	r25, 0x10	; 16
  fe:	c4 9a       	sbi	0x18, 4	; 24
 100:	00 00       	nop
 102:	00 00       	nop
 104:	00 00       	nop
 106:	11 ba       	out	0x11, r1	; 17
 108:	90 b3       	in	r25, 0x10	; 16
 10a:	c4 98       	cbi	0x18, 4	; 24
 10c:	99 23       	and	r25, r25
 10e:	9c f3       	brlt	.-26     	; 0xf6 <write>
 110:	e3 cf       	rjmp	.-58     	; 0xd8 <output>

00000112 <ini_lcd>:
 112:	ba 9a       	sbi	0x17, 2	; 23
 114:	bb 9a       	sbi	0x17, 3	; 23
 116:	bc 9a       	sbi	0x17, 4	; 23
 118:	80 e1       	ldi	r24, 0x10	; 16
 11a:	90 e0       	ldi	r25, 0x00	; 0
 11c:	c3 df       	rcall	.-122    	; 0xa4 <wait_avr>
 11e:	60 e0       	ldi	r22, 0x00	; 0
 120:	80 e3       	ldi	r24, 0x30	; 48
 122:	da df       	rcall	.-76     	; 0xd8 <output>
 124:	85 e0       	ldi	r24, 0x05	; 5
 126:	90 e0       	ldi	r25, 0x00	; 0
 128:	bd df       	rcall	.-134    	; 0xa4 <wait_avr>
 12a:	60 e0       	ldi	r22, 0x00	; 0
 12c:	80 e3       	ldi	r24, 0x30	; 48
 12e:	d4 df       	rcall	.-88     	; 0xd8 <output>
 130:	81 e0       	ldi	r24, 0x01	; 1
 132:	90 e0       	ldi	r25, 0x00	; 0
 134:	b7 df       	rcall	.-146    	; 0xa4 <wait_avr>
 136:	60 e0       	ldi	r22, 0x00	; 0
 138:	8c e3       	ldi	r24, 0x3C	; 60
 13a:	dd df       	rcall	.-70     	; 0xf6 <write>
 13c:	60 e0       	ldi	r22, 0x00	; 0
 13e:	8c e0       	ldi	r24, 0x0C	; 12
 140:	da df       	rcall	.-76     	; 0xf6 <write>
 142:	60 e0       	ldi	r22, 0x00	; 0
 144:	86 e0       	ldi	r24, 0x06	; 6
 146:	d7 df       	rcall	.-82     	; 0xf6 <write>
 148:	60 e0       	ldi	r22, 0x00	; 0
 14a:	81 e0       	ldi	r24, 0x01	; 1
 14c:	d4 cf       	rjmp	.-88     	; 0xf6 <write>

0000014e <clr_lcd>:
 14e:	60 e0       	ldi	r22, 0x00	; 0
 150:	81 e0       	ldi	r24, 0x01	; 1
 152:	d1 cf       	rjmp	.-94     	; 0xf6 <write>

00000154 <pos_lcd>:
 154:	cf 93       	push	r28
 156:	c6 2f       	mov	r28, r22
 158:	98 e2       	ldi	r25, 0x28	; 40
 15a:	89 9f       	mul	r24, r25
 15c:	c0 0d       	add	r28, r0
 15e:	11 24       	eor	r1, r1
 160:	60 e0       	ldi	r22, 0x00	; 0
 162:	82 e0       	ldi	r24, 0x02	; 2
 164:	c8 df       	rcall	.-112    	; 0xf6 <write>
 166:	cc 23       	and	r28, r28
 168:	29 f0       	breq	.+10     	; 0x174 <pos_lcd+0x20>
 16a:	60 e0       	ldi	r22, 0x00	; 0
 16c:	84 e1       	ldi	r24, 0x14	; 20
 16e:	c3 df       	rcall	.-122    	; 0xf6 <write>
 170:	c1 50       	subi	r28, 0x01	; 1
 172:	d9 f7       	brne	.-10     	; 0x16a <pos_lcd+0x16>
 174:	cf 91       	pop	r28
 176:	08 95       	ret

00000178 <put_str_lcd>:

void
put_str_lcd(const char *s)
{
 178:	cf 93       	push	r28
 17a:	df 93       	push	r29
  char c;
  while ((c = *(s++)) != 0) {
 17c:	ec 01       	movw	r28, r24
 17e:	89 91       	ld	r24, Y+
 180:	88 23       	and	r24, r24
 182:	29 f0       	breq	.+10     	; 0x18e <put_str_lcd+0x16>
    write(c, 1);
 184:	61 e0       	ldi	r22, 0x01	; 1
 186:	b7 df       	rcall	.-146    	; 0xf6 <write>

void
put_str_lcd(const char *s)
{
  char c;
  while ((c = *(s++)) != 0) {
 188:	89 91       	ld	r24, Y+
 18a:	81 11       	cpse	r24, r1
 18c:	fb cf       	rjmp	.-10     	; 0x184 <put_str_lcd+0xc>
    write(c, 1);
  }
}
 18e:	df 91       	pop	r29
 190:	cf 91       	pop	r28
 192:	08 95       	ret

00000194 <sample>:
volatile unsigned short min = 1023;


unsigned short sample(void)
{
	SET_BIT(ADCSRA, ADSC); // start conversion
 194:	36 9a       	sbi	0x06, 6	; 6
	while(!GET_BIT(ADCSRA, ADIF)); // wait til ADIF is 1 to signal conversion complete
 196:	34 9b       	sbis	0x06, 4	; 6
 198:	fe cf       	rjmp	.-4      	; 0x196 <sample+0x2>
	SET_BIT(ADCSRA, ADIF); // reset flag
 19a:	34 9a       	sbi	0x06, 4	; 6
	return ADC; // read result
 19c:	24 b1       	in	r18, 0x04	; 4
 19e:	35 b1       	in	r19, 0x05	; 5
}
 1a0:	82 2f       	mov	r24, r18
 1a2:	93 2f       	mov	r25, r19
 1a4:	08 95       	ret

000001a6 <display>:

void display(unsigned short current, unsigned short max, unsigned short min, unsigned short ave)
{
 1a6:	0f 93       	push	r16
 1a8:	1f 93       	push	r17
 1aa:	cf 93       	push	r28
 1ac:	df 93       	push	r29
 1ae:	cd b7       	in	r28, 0x3d	; 61
 1b0:	de b7       	in	r29, 0x3e	; 62
 1b2:	27 97       	sbiw	r28, 0x07	; 7
 1b4:	0f b6       	in	r0, 0x3f	; 63
 1b6:	f8 94       	cli
 1b8:	de bf       	out	0x3e, r29	; 62
 1ba:	0f be       	out	0x3f, r0	; 63
 1bc:	cd bf       	out	0x3d, r28	; 61
 1be:	18 2f       	mov	r17, r24
 1c0:	09 2f       	mov	r16, r25
	//current 
	clr_lcd();
 1c2:	c5 df       	rcall	.-118    	; 0x14e <clr_lcd>
	

	char buffer[7];
	
	pos_lcd(0,0);
 1c4:	60 e0       	ldi	r22, 0x00	; 0
 1c6:	80 e0       	ldi	r24, 0x00	; 0
 1c8:	c5 df       	rcall	.-118    	; 0x154 <pos_lcd>
	sprintf(buffer, "CUR:%i", current);
 1ca:	0f 93       	push	r16
 1cc:	1f 93       	push	r17
 1ce:	82 e6       	ldi	r24, 0x62	; 98
 1d0:	90 e0       	ldi	r25, 0x00	; 0
 1d2:	9f 93       	push	r25
 1d4:	8f 93       	push	r24
 1d6:	8e 01       	movw	r16, r28
 1d8:	0f 5f       	subi	r16, 0xFF	; 255
 1da:	1f 4f       	sbci	r17, 0xFF	; 255
 1dc:	1f 93       	push	r17
 1de:	0f 93       	push	r16
 1e0:	cb d0       	rcall	.+406    	; 0x378 <sprintf>
	put_str_lcd(buffer);
 1e2:	c8 01       	movw	r24, r16
 1e4:	c9 df       	rcall	.-110    	; 0x178 <put_str_lcd>
 1e6:	0f 90       	pop	r0
 1e8:	0f 90       	pop	r0
 1ea:	0f 90       	pop	r0
 1ec:	0f 90       	pop	r0
 1ee:	0f 90       	pop	r0
 1f0:	0f 90       	pop	r0
}
 1f2:	27 96       	adiw	r28, 0x07	; 7
 1f4:	0f b6       	in	r0, 0x3f	; 63
 1f6:	f8 94       	cli
 1f8:	de bf       	out	0x3e, r29	; 62
 1fa:	0f be       	out	0x3f, r0	; 63
 1fc:	cd bf       	out	0x3d, r28	; 61
 1fe:	df 91       	pop	r29
 200:	cf 91       	pop	r28
 202:	1f 91       	pop	r17
 204:	0f 91       	pop	r16
 206:	08 95       	ret

00000208 <changeLights>:
	SET_BIT(TIFR, 4);
}

void changeLights(void)
{
	counter++;
 208:	80 91 72 00 	lds	r24, 0x0072
 20c:	90 91 73 00 	lds	r25, 0x0073
 210:	01 96       	adiw	r24, 0x01	; 1
 212:	90 93 73 00 	sts	0x0073, r25
 216:	80 93 72 00 	sts	0x0072, r24
	if(counter % 2 == 1)
 21a:	80 91 72 00 	lds	r24, 0x0072
 21e:	90 91 73 00 	lds	r25, 0x0073
 222:	80 ff       	sbrs	r24, 0
 224:	0a c0       	rjmp	.+20     	; 0x23a <changeLights+0x32>
	{
		CLR_BIT(PORTC, 0);
 226:	a8 98       	cbi	0x15, 0	; 21
		SET_BIT(PORTC, 1);
 228:	a9 9a       	sbi	0x15, 1	; 21

		wait_avr(2000);
 22a:	80 ed       	ldi	r24, 0xD0	; 208
 22c:	97 e0       	ldi	r25, 0x07	; 7
 22e:	3a df       	rcall	.-396    	; 0xa4 <wait_avr>
		CLR_BIT(PORTC, 1);
 230:	a9 98       	cbi	0x15, 1	; 21
		SET_BIT(PORTC, 2);
 232:	aa 9a       	sbi	0x15, 2	; 21
		
		CLR_BIT(PORTC, 5);
 234:	ad 98       	cbi	0x15, 5	; 21
		SET_BIT(PORTC, 3);
 236:	ab 9a       	sbi	0x15, 3	; 21
 238:	08 95       	ret
	}
	else if(counter % 2 == 0)
 23a:	80 91 72 00 	lds	r24, 0x0072
 23e:	90 91 73 00 	lds	r25, 0x0073
 242:	80 fd       	sbrc	r24, 0
 244:	09 c0       	rjmp	.+18     	; 0x258 <changeLights+0x50>
	{
		CLR_BIT(PORTC, 3);
 246:	ab 98       	cbi	0x15, 3	; 21
		SET_BIT(PORTC, 4);
 248:	ac 9a       	sbi	0x15, 4	; 21
		
		wait_avr(2000);
 24a:	80 ed       	ldi	r24, 0xD0	; 208
 24c:	97 e0       	ldi	r25, 0x07	; 7
 24e:	2a df       	rcall	.-428    	; 0xa4 <wait_avr>
		CLR_BIT(PORTC, 4);
 250:	ac 98       	cbi	0x15, 4	; 21
		SET_BIT(PORTC, 5);
 252:	ad 9a       	sbi	0x15, 5	; 21
		
		CLR_BIT(PORTC, 2);
 254:	aa 98       	cbi	0x15, 2	; 21
		SET_BIT(PORTC, 0);
 256:	a8 9a       	sbi	0x15, 0	; 21
 258:	08 95       	ret

0000025a <__vector_7>:
	pos_lcd(0,0);
	sprintf(buffer, "CUR:%i", current);
	put_str_lcd(buffer);
}
ISR(TIMER1_COMPA_vect)
{
 25a:	1f 92       	push	r1
 25c:	0f 92       	push	r0
 25e:	0f b6       	in	r0, 0x3f	; 63
 260:	0f 92       	push	r0
 262:	11 24       	eor	r1, r1
 264:	2f 93       	push	r18
 266:	3f 93       	push	r19
 268:	4f 93       	push	r20
 26a:	5f 93       	push	r21
 26c:	6f 93       	push	r22
 26e:	7f 93       	push	r23
 270:	8f 93       	push	r24
 272:	9f 93       	push	r25
 274:	af 93       	push	r26
 276:	bf 93       	push	r27
 278:	ef 93       	push	r30
 27a:	ff 93       	push	r31
 	current = sample();
 27c:	8b df       	rcall	.-234    	; 0x194 <sample>
 27e:	90 93 81 00 	sts	0x0081, r25
 282:	80 93 80 00 	sts	0x0080, r24
 	
 	if(current > max)
 286:	20 91 80 00 	lds	r18, 0x0080
 28a:	30 91 81 00 	lds	r19, 0x0081
 28e:	80 91 82 00 	lds	r24, 0x0082
 292:	90 91 83 00 	lds	r25, 0x0083
 296:	82 17       	cp	r24, r18
 298:	93 07       	cpc	r25, r19
 29a:	48 f4       	brcc	.+18     	; 0x2ae <__vector_7+0x54>
 	{
 		max = current;
 29c:	80 91 80 00 	lds	r24, 0x0080
 2a0:	90 91 81 00 	lds	r25, 0x0081
 2a4:	90 93 83 00 	sts	0x0083, r25
 2a8:	80 93 82 00 	sts	0x0082, r24
 2ac:	13 c0       	rjmp	.+38     	; 0x2d4 <__vector_7+0x7a>
 	}
 	
 	else if(current <= min)
 2ae:	20 91 80 00 	lds	r18, 0x0080
 2b2:	30 91 81 00 	lds	r19, 0x0081
 2b6:	80 91 60 00 	lds	r24, 0x0060
 2ba:	90 91 61 00 	lds	r25, 0x0061
 2be:	82 17       	cp	r24, r18
 2c0:	93 07       	cpc	r25, r19
 2c2:	40 f0       	brcs	.+16     	; 0x2d4 <__vector_7+0x7a>
 	{
 		min = current;
 2c4:	80 91 80 00 	lds	r24, 0x0080
 2c8:	90 91 81 00 	lds	r25, 0x0081
 2cc:	90 93 61 00 	sts	0x0061, r25
 2d0:	80 93 60 00 	sts	0x0060, r24
 	}
	display(current, max, min, ave);
 2d4:	20 91 74 00 	lds	r18, 0x0074
 2d8:	30 91 75 00 	lds	r19, 0x0075
 2dc:	40 91 60 00 	lds	r20, 0x0060
 2e0:	50 91 61 00 	lds	r21, 0x0061
 2e4:	60 91 82 00 	lds	r22, 0x0082
 2e8:	70 91 83 00 	lds	r23, 0x0083
 2ec:	80 91 80 00 	lds	r24, 0x0080
 2f0:	90 91 81 00 	lds	r25, 0x0081
 2f4:	58 df       	rcall	.-336    	; 0x1a6 <display>
	if(current < max-200)
 2f6:	20 91 82 00 	lds	r18, 0x0082
 2fa:	30 91 83 00 	lds	r19, 0x0083
 2fe:	80 91 80 00 	lds	r24, 0x0080
 302:	90 91 81 00 	lds	r25, 0x0081
 306:	28 5c       	subi	r18, 0xC8	; 200
 308:	31 09       	sbc	r19, r1
 30a:	82 17       	cp	r24, r18
 30c:	93 07       	cpc	r25, r19
 30e:	08 f4       	brcc	.+2      	; 0x312 <__vector_7+0xb8>
		changeLights();
 310:	7b df       	rcall	.-266    	; 0x208 <changeLights>
		
	wait_avr(100);
 312:	84 e6       	ldi	r24, 0x64	; 100
 314:	90 e0       	ldi	r25, 0x00	; 0
 316:	c6 de       	rcall	.-628    	; 0xa4 <wait_avr>
	SET_BIT(TIFR, 4);
 318:	88 b7       	in	r24, 0x38	; 56
 31a:	80 61       	ori	r24, 0x10	; 16
 31c:	88 bf       	out	0x38, r24	; 56
}
 31e:	ff 91       	pop	r31
 320:	ef 91       	pop	r30
 322:	bf 91       	pop	r27
 324:	af 91       	pop	r26
 326:	9f 91       	pop	r25
 328:	8f 91       	pop	r24
 32a:	7f 91       	pop	r23
 32c:	6f 91       	pop	r22
 32e:	5f 91       	pop	r21
 330:	4f 91       	pop	r20
 332:	3f 91       	pop	r19
 334:	2f 91       	pop	r18
 336:	0f 90       	pop	r0
 338:	0f be       	out	0x3f, r0	; 63
 33a:	0f 90       	pop	r0
 33c:	1f 90       	pop	r1
 33e:	18 95       	reti

00000340 <main>:
}

int main (void)
{

	ini_lcd();
 340:	e8 de       	rcall	.-560    	; 0x112 <ini_lcd>
	ini_avr();
 342:	a4 de       	rcall	.-696    	; 0x8c <ini_avr>
	//ini_keyPad();
	put_str_lcd("Welcome");
 344:	89 e6       	ldi	r24, 0x69	; 105
 346:	90 e0       	ldi	r25, 0x00	; 0
 348:	17 df       	rcall	.-466    	; 0x178 <put_str_lcd>
	
	SET_BIT(DDRC, 0);
 34a:	a0 9a       	sbi	0x14, 0	; 20
	SET_BIT(DDRC, 1);
 34c:	a1 9a       	sbi	0x14, 1	; 20
	SET_BIT(DDRC, 2);
 34e:	a2 9a       	sbi	0x14, 2	; 20
	SET_BIT(DDRC, 3);
 350:	a3 9a       	sbi	0x14, 3	; 20
	SET_BIT(DDRC, 4);
 352:	a4 9a       	sbi	0x14, 4	; 20
	SET_BIT(DDRC, 5);
 354:	a5 9a       	sbi	0x14, 5	; 20
	SET_BIT(PORTC, 0);
 356:	a8 9a       	sbi	0x15, 0	; 21
	CLR_BIT(PORTC, 1);
 358:	a9 98       	cbi	0x15, 1	; 21
	CLR_BIT(PORTC, 2);
 35a:	aa 98       	cbi	0x15, 2	; 21
	CLR_BIT(PORTC, 3);
 35c:	ab 98       	cbi	0x15, 3	; 21
	CLR_BIT(PORTC, 4);
 35e:	ac 98       	cbi	0x15, 4	; 21
	SET_BIT(PORTC, 5);
 360:	ad 9a       	sbi	0x15, 5	; 21


	ADCSRA = 0; // clear ADCSRA
 362:	16 b8       	out	0x06, r1	; 6
	ADMUX = 65; // 64 for bit 6 + 1 for bit 1
 364:	81 e4       	ldi	r24, 0x41	; 65
 366:	87 b9       	out	0x07, r24	; 7

	SET_BIT(ADCSRA, ADEN); // set ADC on
 368:	37 9a       	sbi	0x06, 7	; 6
	setupInterrupt(1000);
 36a:	88 ee       	ldi	r24, 0xE8	; 232
 36c:	93 e0       	ldi	r25, 0x03	; 3
 36e:	aa de       	rcall	.-684    	; 0xc4 <setupInterrupt>
	
	while(1)
	{
		wait_avr(20000);
 370:	80 e2       	ldi	r24, 0x20	; 32
 372:	9e e4       	ldi	r25, 0x4E	; 78
 374:	97 de       	rcall	.-722    	; 0xa4 <wait_avr>
 376:	fc cf       	rjmp	.-8      	; 0x370 <main+0x30>

00000378 <sprintf>:
 378:	ae e0       	ldi	r26, 0x0E	; 14
 37a:	b0 e0       	ldi	r27, 0x00	; 0
 37c:	e1 ec       	ldi	r30, 0xC1	; 193
 37e:	f1 e0       	ldi	r31, 0x01	; 1
 380:	95 c2       	rjmp	.+1322   	; 0x8ac <__prologue_saves__+0x1c>
 382:	0d 89       	ldd	r16, Y+21	; 0x15
 384:	1e 89       	ldd	r17, Y+22	; 0x16
 386:	86 e0       	ldi	r24, 0x06	; 6
 388:	8c 83       	std	Y+4, r24	; 0x04
 38a:	1a 83       	std	Y+2, r17	; 0x02
 38c:	09 83       	std	Y+1, r16	; 0x01
 38e:	8f ef       	ldi	r24, 0xFF	; 255
 390:	9f e7       	ldi	r25, 0x7F	; 127
 392:	9e 83       	std	Y+6, r25	; 0x06
 394:	8d 83       	std	Y+5, r24	; 0x05
 396:	ce 01       	movw	r24, r28
 398:	49 96       	adiw	r24, 0x19	; 25
 39a:	ac 01       	movw	r20, r24
 39c:	6f 89       	ldd	r22, Y+23	; 0x17
 39e:	78 8d       	ldd	r23, Y+24	; 0x18
 3a0:	ce 01       	movw	r24, r28
 3a2:	01 96       	adiw	r24, 0x01	; 1
 3a4:	08 d0       	rcall	.+16     	; 0x3b6 <vfprintf>
 3a6:	ef 81       	ldd	r30, Y+7	; 0x07
 3a8:	f8 85       	ldd	r31, Y+8	; 0x08
 3aa:	e0 0f       	add	r30, r16
 3ac:	f1 1f       	adc	r31, r17
 3ae:	10 82       	st	Z, r1
 3b0:	2e 96       	adiw	r28, 0x0e	; 14
 3b2:	e4 e0       	ldi	r30, 0x04	; 4
 3b4:	97 c2       	rjmp	.+1326   	; 0x8e4 <__epilogue_restores__+0x1c>

000003b6 <vfprintf>:
 3b6:	ac e0       	ldi	r26, 0x0C	; 12
 3b8:	b0 e0       	ldi	r27, 0x00	; 0
 3ba:	e0 ee       	ldi	r30, 0xE0	; 224
 3bc:	f1 e0       	ldi	r31, 0x01	; 1
 3be:	68 c2       	rjmp	.+1232   	; 0x890 <__prologue_saves__>
 3c0:	7c 01       	movw	r14, r24
 3c2:	6b 01       	movw	r12, r22
 3c4:	8a 01       	movw	r16, r20
 3c6:	fc 01       	movw	r30, r24
 3c8:	17 82       	std	Z+7, r1	; 0x07
 3ca:	16 82       	std	Z+6, r1	; 0x06
 3cc:	83 81       	ldd	r24, Z+3	; 0x03
 3ce:	81 ff       	sbrs	r24, 1
 3d0:	b9 c1       	rjmp	.+882    	; 0x744 <vfprintf+0x38e>
 3d2:	88 24       	eor	r8, r8
 3d4:	83 94       	inc	r8
 3d6:	91 2c       	mov	r9, r1
 3d8:	8c 0e       	add	r8, r28
 3da:	9d 1e       	adc	r9, r29
 3dc:	f7 01       	movw	r30, r14
 3de:	93 81       	ldd	r25, Z+3	; 0x03
 3e0:	f6 01       	movw	r30, r12
 3e2:	93 fd       	sbrc	r25, 3
 3e4:	85 91       	lpm	r24, Z+
 3e6:	93 ff       	sbrs	r25, 3
 3e8:	81 91       	ld	r24, Z+
 3ea:	6f 01       	movw	r12, r30
 3ec:	88 23       	and	r24, r24
 3ee:	09 f4       	brne	.+2      	; 0x3f2 <vfprintf+0x3c>
 3f0:	a5 c1       	rjmp	.+842    	; 0x73c <vfprintf+0x386>
 3f2:	85 32       	cpi	r24, 0x25	; 37
 3f4:	39 f4       	brne	.+14     	; 0x404 <vfprintf+0x4e>
 3f6:	93 fd       	sbrc	r25, 3
 3f8:	85 91       	lpm	r24, Z+
 3fa:	93 ff       	sbrs	r25, 3
 3fc:	81 91       	ld	r24, Z+
 3fe:	6f 01       	movw	r12, r30
 400:	85 32       	cpi	r24, 0x25	; 37
 402:	21 f4       	brne	.+8      	; 0x40c <vfprintf+0x56>
 404:	b7 01       	movw	r22, r14
 406:	90 e0       	ldi	r25, 0x00	; 0
 408:	b9 d1       	rcall	.+882    	; 0x77c <fputc>
 40a:	e8 cf       	rjmp	.-48     	; 0x3dc <vfprintf+0x26>
 40c:	51 2c       	mov	r5, r1
 40e:	31 2c       	mov	r3, r1
 410:	20 e0       	ldi	r18, 0x00	; 0
 412:	20 32       	cpi	r18, 0x20	; 32
 414:	a8 f4       	brcc	.+42     	; 0x440 <vfprintf+0x8a>
 416:	8b 32       	cpi	r24, 0x2B	; 43
 418:	61 f0       	breq	.+24     	; 0x432 <vfprintf+0x7c>
 41a:	28 f4       	brcc	.+10     	; 0x426 <vfprintf+0x70>
 41c:	80 32       	cpi	r24, 0x20	; 32
 41e:	51 f0       	breq	.+20     	; 0x434 <vfprintf+0x7e>
 420:	83 32       	cpi	r24, 0x23	; 35
 422:	71 f4       	brne	.+28     	; 0x440 <vfprintf+0x8a>
 424:	0b c0       	rjmp	.+22     	; 0x43c <vfprintf+0x86>
 426:	8d 32       	cpi	r24, 0x2D	; 45
 428:	39 f0       	breq	.+14     	; 0x438 <vfprintf+0x82>
 42a:	80 33       	cpi	r24, 0x30	; 48
 42c:	49 f4       	brne	.+18     	; 0x440 <vfprintf+0x8a>
 42e:	21 60       	ori	r18, 0x01	; 1
 430:	28 c0       	rjmp	.+80     	; 0x482 <vfprintf+0xcc>
 432:	22 60       	ori	r18, 0x02	; 2
 434:	24 60       	ori	r18, 0x04	; 4
 436:	25 c0       	rjmp	.+74     	; 0x482 <vfprintf+0xcc>
 438:	28 60       	ori	r18, 0x08	; 8
 43a:	23 c0       	rjmp	.+70     	; 0x482 <vfprintf+0xcc>
 43c:	20 61       	ori	r18, 0x10	; 16
 43e:	21 c0       	rjmp	.+66     	; 0x482 <vfprintf+0xcc>
 440:	27 fd       	sbrc	r18, 7
 442:	27 c0       	rjmp	.+78     	; 0x492 <vfprintf+0xdc>
 444:	38 2f       	mov	r19, r24
 446:	30 53       	subi	r19, 0x30	; 48
 448:	3a 30       	cpi	r19, 0x0A	; 10
 44a:	78 f4       	brcc	.+30     	; 0x46a <vfprintf+0xb4>
 44c:	26 ff       	sbrs	r18, 6
 44e:	06 c0       	rjmp	.+12     	; 0x45c <vfprintf+0xa6>
 450:	fa e0       	ldi	r31, 0x0A	; 10
 452:	5f 9e       	mul	r5, r31
 454:	30 0d       	add	r19, r0
 456:	11 24       	eor	r1, r1
 458:	53 2e       	mov	r5, r19
 45a:	13 c0       	rjmp	.+38     	; 0x482 <vfprintf+0xcc>
 45c:	8a e0       	ldi	r24, 0x0A	; 10
 45e:	38 9e       	mul	r3, r24
 460:	30 0d       	add	r19, r0
 462:	11 24       	eor	r1, r1
 464:	33 2e       	mov	r3, r19
 466:	20 62       	ori	r18, 0x20	; 32
 468:	0c c0       	rjmp	.+24     	; 0x482 <vfprintf+0xcc>
 46a:	8e 32       	cpi	r24, 0x2E	; 46
 46c:	21 f4       	brne	.+8      	; 0x476 <vfprintf+0xc0>
 46e:	26 fd       	sbrc	r18, 6
 470:	65 c1       	rjmp	.+714    	; 0x73c <vfprintf+0x386>
 472:	20 64       	ori	r18, 0x40	; 64
 474:	06 c0       	rjmp	.+12     	; 0x482 <vfprintf+0xcc>
 476:	8c 36       	cpi	r24, 0x6C	; 108
 478:	11 f4       	brne	.+4      	; 0x47e <vfprintf+0xc8>
 47a:	20 68       	ori	r18, 0x80	; 128
 47c:	02 c0       	rjmp	.+4      	; 0x482 <vfprintf+0xcc>
 47e:	88 36       	cpi	r24, 0x68	; 104
 480:	41 f4       	brne	.+16     	; 0x492 <vfprintf+0xdc>
 482:	f6 01       	movw	r30, r12
 484:	93 fd       	sbrc	r25, 3
 486:	85 91       	lpm	r24, Z+
 488:	93 ff       	sbrs	r25, 3
 48a:	81 91       	ld	r24, Z+
 48c:	6f 01       	movw	r12, r30
 48e:	81 11       	cpse	r24, r1
 490:	c0 cf       	rjmp	.-128    	; 0x412 <vfprintf+0x5c>
 492:	98 2f       	mov	r25, r24
 494:	95 54       	subi	r25, 0x45	; 69
 496:	93 30       	cpi	r25, 0x03	; 3
 498:	18 f0       	brcs	.+6      	; 0x4a0 <vfprintf+0xea>
 49a:	90 52       	subi	r25, 0x20	; 32
 49c:	93 30       	cpi	r25, 0x03	; 3
 49e:	28 f4       	brcc	.+10     	; 0x4aa <vfprintf+0xf4>
 4a0:	0c 5f       	subi	r16, 0xFC	; 252
 4a2:	1f 4f       	sbci	r17, 0xFF	; 255
 4a4:	ff e3       	ldi	r31, 0x3F	; 63
 4a6:	f9 83       	std	Y+1, r31	; 0x01
 4a8:	0d c0       	rjmp	.+26     	; 0x4c4 <vfprintf+0x10e>
 4aa:	83 36       	cpi	r24, 0x63	; 99
 4ac:	31 f0       	breq	.+12     	; 0x4ba <vfprintf+0x104>
 4ae:	83 37       	cpi	r24, 0x73	; 115
 4b0:	71 f0       	breq	.+28     	; 0x4ce <vfprintf+0x118>
 4b2:	83 35       	cpi	r24, 0x53	; 83
 4b4:	09 f0       	breq	.+2      	; 0x4b8 <vfprintf+0x102>
 4b6:	5a c0       	rjmp	.+180    	; 0x56c <vfprintf+0x1b6>
 4b8:	22 c0       	rjmp	.+68     	; 0x4fe <vfprintf+0x148>
 4ba:	f8 01       	movw	r30, r16
 4bc:	80 81       	ld	r24, Z
 4be:	89 83       	std	Y+1, r24	; 0x01
 4c0:	0e 5f       	subi	r16, 0xFE	; 254
 4c2:	1f 4f       	sbci	r17, 0xFF	; 255
 4c4:	44 24       	eor	r4, r4
 4c6:	43 94       	inc	r4
 4c8:	51 2c       	mov	r5, r1
 4ca:	54 01       	movw	r10, r8
 4cc:	14 c0       	rjmp	.+40     	; 0x4f6 <vfprintf+0x140>
 4ce:	38 01       	movw	r6, r16
 4d0:	f2 e0       	ldi	r31, 0x02	; 2
 4d2:	6f 0e       	add	r6, r31
 4d4:	71 1c       	adc	r7, r1
 4d6:	f8 01       	movw	r30, r16
 4d8:	a0 80       	ld	r10, Z
 4da:	b1 80       	ldd	r11, Z+1	; 0x01
 4dc:	26 ff       	sbrs	r18, 6
 4de:	03 c0       	rjmp	.+6      	; 0x4e6 <vfprintf+0x130>
 4e0:	65 2d       	mov	r22, r5
 4e2:	70 e0       	ldi	r23, 0x00	; 0
 4e4:	02 c0       	rjmp	.+4      	; 0x4ea <vfprintf+0x134>
 4e6:	6f ef       	ldi	r22, 0xFF	; 255
 4e8:	7f ef       	ldi	r23, 0xFF	; 255
 4ea:	c5 01       	movw	r24, r10
 4ec:	2c 87       	std	Y+12, r18	; 0x0c
 4ee:	3b d1       	rcall	.+630    	; 0x766 <strnlen>
 4f0:	2c 01       	movw	r4, r24
 4f2:	83 01       	movw	r16, r6
 4f4:	2c 85       	ldd	r18, Y+12	; 0x0c
 4f6:	6f e7       	ldi	r22, 0x7F	; 127
 4f8:	26 2e       	mov	r2, r22
 4fa:	22 22       	and	r2, r18
 4fc:	17 c0       	rjmp	.+46     	; 0x52c <vfprintf+0x176>
 4fe:	38 01       	movw	r6, r16
 500:	f2 e0       	ldi	r31, 0x02	; 2
 502:	6f 0e       	add	r6, r31
 504:	71 1c       	adc	r7, r1
 506:	f8 01       	movw	r30, r16
 508:	a0 80       	ld	r10, Z
 50a:	b1 80       	ldd	r11, Z+1	; 0x01
 50c:	26 ff       	sbrs	r18, 6
 50e:	03 c0       	rjmp	.+6      	; 0x516 <vfprintf+0x160>
 510:	65 2d       	mov	r22, r5
 512:	70 e0       	ldi	r23, 0x00	; 0
 514:	02 c0       	rjmp	.+4      	; 0x51a <vfprintf+0x164>
 516:	6f ef       	ldi	r22, 0xFF	; 255
 518:	7f ef       	ldi	r23, 0xFF	; 255
 51a:	c5 01       	movw	r24, r10
 51c:	2c 87       	std	Y+12, r18	; 0x0c
 51e:	18 d1       	rcall	.+560    	; 0x750 <strnlen_P>
 520:	2c 01       	movw	r4, r24
 522:	2c 85       	ldd	r18, Y+12	; 0x0c
 524:	50 e8       	ldi	r21, 0x80	; 128
 526:	25 2e       	mov	r2, r21
 528:	22 2a       	or	r2, r18
 52a:	83 01       	movw	r16, r6
 52c:	23 fc       	sbrc	r2, 3
 52e:	1a c0       	rjmp	.+52     	; 0x564 <vfprintf+0x1ae>
 530:	05 c0       	rjmp	.+10     	; 0x53c <vfprintf+0x186>
 532:	b7 01       	movw	r22, r14
 534:	80 e2       	ldi	r24, 0x20	; 32
 536:	90 e0       	ldi	r25, 0x00	; 0
 538:	21 d1       	rcall	.+578    	; 0x77c <fputc>
 53a:	3a 94       	dec	r3
 53c:	83 2d       	mov	r24, r3
 53e:	90 e0       	ldi	r25, 0x00	; 0
 540:	48 16       	cp	r4, r24
 542:	59 06       	cpc	r5, r25
 544:	b0 f3       	brcs	.-20     	; 0x532 <vfprintf+0x17c>
 546:	0e c0       	rjmp	.+28     	; 0x564 <vfprintf+0x1ae>
 548:	f5 01       	movw	r30, r10
 54a:	27 fc       	sbrc	r2, 7
 54c:	85 91       	lpm	r24, Z+
 54e:	27 fe       	sbrs	r2, 7
 550:	81 91       	ld	r24, Z+
 552:	5f 01       	movw	r10, r30
 554:	b7 01       	movw	r22, r14
 556:	90 e0       	ldi	r25, 0x00	; 0
 558:	11 d1       	rcall	.+546    	; 0x77c <fputc>
 55a:	31 10       	cpse	r3, r1
 55c:	3a 94       	dec	r3
 55e:	f1 e0       	ldi	r31, 0x01	; 1
 560:	4f 1a       	sub	r4, r31
 562:	51 08       	sbc	r5, r1
 564:	41 14       	cp	r4, r1
 566:	51 04       	cpc	r5, r1
 568:	79 f7       	brne	.-34     	; 0x548 <vfprintf+0x192>
 56a:	e5 c0       	rjmp	.+458    	; 0x736 <vfprintf+0x380>
 56c:	84 36       	cpi	r24, 0x64	; 100
 56e:	11 f0       	breq	.+4      	; 0x574 <vfprintf+0x1be>
 570:	89 36       	cpi	r24, 0x69	; 105
 572:	39 f5       	brne	.+78     	; 0x5c2 <vfprintf+0x20c>
 574:	f8 01       	movw	r30, r16
 576:	27 ff       	sbrs	r18, 7
 578:	07 c0       	rjmp	.+14     	; 0x588 <vfprintf+0x1d2>
 57a:	60 81       	ld	r22, Z
 57c:	71 81       	ldd	r23, Z+1	; 0x01
 57e:	82 81       	ldd	r24, Z+2	; 0x02
 580:	93 81       	ldd	r25, Z+3	; 0x03
 582:	0c 5f       	subi	r16, 0xFC	; 252
 584:	1f 4f       	sbci	r17, 0xFF	; 255
 586:	08 c0       	rjmp	.+16     	; 0x598 <vfprintf+0x1e2>
 588:	60 81       	ld	r22, Z
 58a:	71 81       	ldd	r23, Z+1	; 0x01
 58c:	88 27       	eor	r24, r24
 58e:	77 fd       	sbrc	r23, 7
 590:	80 95       	com	r24
 592:	98 2f       	mov	r25, r24
 594:	0e 5f       	subi	r16, 0xFE	; 254
 596:	1f 4f       	sbci	r17, 0xFF	; 255
 598:	4f e6       	ldi	r20, 0x6F	; 111
 59a:	b4 2e       	mov	r11, r20
 59c:	b2 22       	and	r11, r18
 59e:	97 ff       	sbrs	r25, 7
 5a0:	09 c0       	rjmp	.+18     	; 0x5b4 <vfprintf+0x1fe>
 5a2:	90 95       	com	r25
 5a4:	80 95       	com	r24
 5a6:	70 95       	com	r23
 5a8:	61 95       	neg	r22
 5aa:	7f 4f       	sbci	r23, 0xFF	; 255
 5ac:	8f 4f       	sbci	r24, 0xFF	; 255
 5ae:	9f 4f       	sbci	r25, 0xFF	; 255
 5b0:	f0 e8       	ldi	r31, 0x80	; 128
 5b2:	bf 2a       	or	r11, r31
 5b4:	2a e0       	ldi	r18, 0x0A	; 10
 5b6:	30 e0       	ldi	r19, 0x00	; 0
 5b8:	a4 01       	movw	r20, r8
 5ba:	0c d1       	rcall	.+536    	; 0x7d4 <__ultoa_invert>
 5bc:	a8 2e       	mov	r10, r24
 5be:	a8 18       	sub	r10, r8
 5c0:	42 c0       	rjmp	.+132    	; 0x646 <vfprintf+0x290>
 5c2:	85 37       	cpi	r24, 0x75	; 117
 5c4:	31 f4       	brne	.+12     	; 0x5d2 <vfprintf+0x21c>
 5c6:	3f ee       	ldi	r19, 0xEF	; 239
 5c8:	b3 2e       	mov	r11, r19
 5ca:	b2 22       	and	r11, r18
 5cc:	2a e0       	ldi	r18, 0x0A	; 10
 5ce:	30 e0       	ldi	r19, 0x00	; 0
 5d0:	24 c0       	rjmp	.+72     	; 0x61a <vfprintf+0x264>
 5d2:	99 ef       	ldi	r25, 0xF9	; 249
 5d4:	b9 2e       	mov	r11, r25
 5d6:	b2 22       	and	r11, r18
 5d8:	8f 36       	cpi	r24, 0x6F	; 111
 5da:	b9 f0       	breq	.+46     	; 0x60a <vfprintf+0x254>
 5dc:	20 f4       	brcc	.+8      	; 0x5e6 <vfprintf+0x230>
 5de:	88 35       	cpi	r24, 0x58	; 88
 5e0:	09 f0       	breq	.+2      	; 0x5e4 <vfprintf+0x22e>
 5e2:	ac c0       	rjmp	.+344    	; 0x73c <vfprintf+0x386>
 5e4:	0d c0       	rjmp	.+26     	; 0x600 <vfprintf+0x24a>
 5e6:	80 37       	cpi	r24, 0x70	; 112
 5e8:	21 f0       	breq	.+8      	; 0x5f2 <vfprintf+0x23c>
 5ea:	88 37       	cpi	r24, 0x78	; 120
 5ec:	09 f0       	breq	.+2      	; 0x5f0 <vfprintf+0x23a>
 5ee:	a6 c0       	rjmp	.+332    	; 0x73c <vfprintf+0x386>
 5f0:	02 c0       	rjmp	.+4      	; 0x5f6 <vfprintf+0x240>
 5f2:	20 e1       	ldi	r18, 0x10	; 16
 5f4:	b2 2a       	or	r11, r18
 5f6:	b4 fe       	sbrs	r11, 4
 5f8:	0b c0       	rjmp	.+22     	; 0x610 <vfprintf+0x25a>
 5fa:	84 e0       	ldi	r24, 0x04	; 4
 5fc:	b8 2a       	or	r11, r24
 5fe:	08 c0       	rjmp	.+16     	; 0x610 <vfprintf+0x25a>
 600:	24 ff       	sbrs	r18, 4
 602:	09 c0       	rjmp	.+18     	; 0x616 <vfprintf+0x260>
 604:	e6 e0       	ldi	r30, 0x06	; 6
 606:	be 2a       	or	r11, r30
 608:	06 c0       	rjmp	.+12     	; 0x616 <vfprintf+0x260>
 60a:	28 e0       	ldi	r18, 0x08	; 8
 60c:	30 e0       	ldi	r19, 0x00	; 0
 60e:	05 c0       	rjmp	.+10     	; 0x61a <vfprintf+0x264>
 610:	20 e1       	ldi	r18, 0x10	; 16
 612:	30 e0       	ldi	r19, 0x00	; 0
 614:	02 c0       	rjmp	.+4      	; 0x61a <vfprintf+0x264>
 616:	20 e1       	ldi	r18, 0x10	; 16
 618:	32 e0       	ldi	r19, 0x02	; 2
 61a:	f8 01       	movw	r30, r16
 61c:	b7 fe       	sbrs	r11, 7
 61e:	07 c0       	rjmp	.+14     	; 0x62e <vfprintf+0x278>
 620:	60 81       	ld	r22, Z
 622:	71 81       	ldd	r23, Z+1	; 0x01
 624:	82 81       	ldd	r24, Z+2	; 0x02
 626:	93 81       	ldd	r25, Z+3	; 0x03
 628:	0c 5f       	subi	r16, 0xFC	; 252
 62a:	1f 4f       	sbci	r17, 0xFF	; 255
 62c:	06 c0       	rjmp	.+12     	; 0x63a <vfprintf+0x284>
 62e:	60 81       	ld	r22, Z
 630:	71 81       	ldd	r23, Z+1	; 0x01
 632:	80 e0       	ldi	r24, 0x00	; 0
 634:	90 e0       	ldi	r25, 0x00	; 0
 636:	0e 5f       	subi	r16, 0xFE	; 254
 638:	1f 4f       	sbci	r17, 0xFF	; 255
 63a:	a4 01       	movw	r20, r8
 63c:	cb d0       	rcall	.+406    	; 0x7d4 <__ultoa_invert>
 63e:	a8 2e       	mov	r10, r24
 640:	a8 18       	sub	r10, r8
 642:	ff e7       	ldi	r31, 0x7F	; 127
 644:	bf 22       	and	r11, r31
 646:	b6 fe       	sbrs	r11, 6
 648:	0b c0       	rjmp	.+22     	; 0x660 <vfprintf+0x2aa>
 64a:	2b 2d       	mov	r18, r11
 64c:	2e 7f       	andi	r18, 0xFE	; 254
 64e:	a5 14       	cp	r10, r5
 650:	50 f4       	brcc	.+20     	; 0x666 <vfprintf+0x2b0>
 652:	b4 fe       	sbrs	r11, 4
 654:	0a c0       	rjmp	.+20     	; 0x66a <vfprintf+0x2b4>
 656:	b2 fc       	sbrc	r11, 2
 658:	08 c0       	rjmp	.+16     	; 0x66a <vfprintf+0x2b4>
 65a:	2b 2d       	mov	r18, r11
 65c:	2e 7e       	andi	r18, 0xEE	; 238
 65e:	05 c0       	rjmp	.+10     	; 0x66a <vfprintf+0x2b4>
 660:	7a 2c       	mov	r7, r10
 662:	2b 2d       	mov	r18, r11
 664:	03 c0       	rjmp	.+6      	; 0x66c <vfprintf+0x2b6>
 666:	7a 2c       	mov	r7, r10
 668:	01 c0       	rjmp	.+2      	; 0x66c <vfprintf+0x2b6>
 66a:	75 2c       	mov	r7, r5
 66c:	24 ff       	sbrs	r18, 4
 66e:	0d c0       	rjmp	.+26     	; 0x68a <vfprintf+0x2d4>
 670:	fe 01       	movw	r30, r28
 672:	ea 0d       	add	r30, r10
 674:	f1 1d       	adc	r31, r1
 676:	80 81       	ld	r24, Z
 678:	80 33       	cpi	r24, 0x30	; 48
 67a:	11 f4       	brne	.+4      	; 0x680 <vfprintf+0x2ca>
 67c:	29 7e       	andi	r18, 0xE9	; 233
 67e:	09 c0       	rjmp	.+18     	; 0x692 <vfprintf+0x2dc>
 680:	22 ff       	sbrs	r18, 2
 682:	06 c0       	rjmp	.+12     	; 0x690 <vfprintf+0x2da>
 684:	73 94       	inc	r7
 686:	73 94       	inc	r7
 688:	04 c0       	rjmp	.+8      	; 0x692 <vfprintf+0x2dc>
 68a:	82 2f       	mov	r24, r18
 68c:	86 78       	andi	r24, 0x86	; 134
 68e:	09 f0       	breq	.+2      	; 0x692 <vfprintf+0x2dc>
 690:	73 94       	inc	r7
 692:	23 fd       	sbrc	r18, 3
 694:	13 c0       	rjmp	.+38     	; 0x6bc <vfprintf+0x306>
 696:	20 ff       	sbrs	r18, 0
 698:	0e c0       	rjmp	.+28     	; 0x6b6 <vfprintf+0x300>
 69a:	5a 2c       	mov	r5, r10
 69c:	73 14       	cp	r7, r3
 69e:	58 f4       	brcc	.+22     	; 0x6b6 <vfprintf+0x300>
 6a0:	53 0c       	add	r5, r3
 6a2:	57 18       	sub	r5, r7
 6a4:	73 2c       	mov	r7, r3
 6a6:	07 c0       	rjmp	.+14     	; 0x6b6 <vfprintf+0x300>
 6a8:	b7 01       	movw	r22, r14
 6aa:	80 e2       	ldi	r24, 0x20	; 32
 6ac:	90 e0       	ldi	r25, 0x00	; 0
 6ae:	2c 87       	std	Y+12, r18	; 0x0c
 6b0:	65 d0       	rcall	.+202    	; 0x77c <fputc>
 6b2:	73 94       	inc	r7
 6b4:	2c 85       	ldd	r18, Y+12	; 0x0c
 6b6:	73 14       	cp	r7, r3
 6b8:	b8 f3       	brcs	.-18     	; 0x6a8 <vfprintf+0x2f2>
 6ba:	04 c0       	rjmp	.+8      	; 0x6c4 <vfprintf+0x30e>
 6bc:	73 14       	cp	r7, r3
 6be:	10 f4       	brcc	.+4      	; 0x6c4 <vfprintf+0x30e>
 6c0:	37 18       	sub	r3, r7
 6c2:	01 c0       	rjmp	.+2      	; 0x6c6 <vfprintf+0x310>
 6c4:	31 2c       	mov	r3, r1
 6c6:	24 ff       	sbrs	r18, 4
 6c8:	11 c0       	rjmp	.+34     	; 0x6ec <vfprintf+0x336>
 6ca:	b7 01       	movw	r22, r14
 6cc:	80 e3       	ldi	r24, 0x30	; 48
 6ce:	90 e0       	ldi	r25, 0x00	; 0
 6d0:	2c 87       	std	Y+12, r18	; 0x0c
 6d2:	54 d0       	rcall	.+168    	; 0x77c <fputc>
 6d4:	2c 85       	ldd	r18, Y+12	; 0x0c
 6d6:	22 ff       	sbrs	r18, 2
 6d8:	1c c0       	rjmp	.+56     	; 0x712 <vfprintf+0x35c>
 6da:	21 ff       	sbrs	r18, 1
 6dc:	03 c0       	rjmp	.+6      	; 0x6e4 <vfprintf+0x32e>
 6de:	88 e5       	ldi	r24, 0x58	; 88
 6e0:	90 e0       	ldi	r25, 0x00	; 0
 6e2:	02 c0       	rjmp	.+4      	; 0x6e8 <vfprintf+0x332>
 6e4:	88 e7       	ldi	r24, 0x78	; 120
 6e6:	90 e0       	ldi	r25, 0x00	; 0
 6e8:	b7 01       	movw	r22, r14
 6ea:	0c c0       	rjmp	.+24     	; 0x704 <vfprintf+0x34e>
 6ec:	82 2f       	mov	r24, r18
 6ee:	86 78       	andi	r24, 0x86	; 134
 6f0:	81 f0       	breq	.+32     	; 0x712 <vfprintf+0x35c>
 6f2:	21 fd       	sbrc	r18, 1
 6f4:	02 c0       	rjmp	.+4      	; 0x6fa <vfprintf+0x344>
 6f6:	80 e2       	ldi	r24, 0x20	; 32
 6f8:	01 c0       	rjmp	.+2      	; 0x6fc <vfprintf+0x346>
 6fa:	8b e2       	ldi	r24, 0x2B	; 43
 6fc:	27 fd       	sbrc	r18, 7
 6fe:	8d e2       	ldi	r24, 0x2D	; 45
 700:	b7 01       	movw	r22, r14
 702:	90 e0       	ldi	r25, 0x00	; 0
 704:	3b d0       	rcall	.+118    	; 0x77c <fputc>
 706:	05 c0       	rjmp	.+10     	; 0x712 <vfprintf+0x35c>
 708:	b7 01       	movw	r22, r14
 70a:	80 e3       	ldi	r24, 0x30	; 48
 70c:	90 e0       	ldi	r25, 0x00	; 0
 70e:	36 d0       	rcall	.+108    	; 0x77c <fputc>
 710:	5a 94       	dec	r5
 712:	a5 14       	cp	r10, r5
 714:	c8 f3       	brcs	.-14     	; 0x708 <vfprintf+0x352>
 716:	aa 94       	dec	r10
 718:	f4 01       	movw	r30, r8
 71a:	ea 0d       	add	r30, r10
 71c:	f1 1d       	adc	r31, r1
 71e:	b7 01       	movw	r22, r14
 720:	80 81       	ld	r24, Z
 722:	90 e0       	ldi	r25, 0x00	; 0
 724:	2b d0       	rcall	.+86     	; 0x77c <fputc>
 726:	a1 10       	cpse	r10, r1
 728:	f6 cf       	rjmp	.-20     	; 0x716 <vfprintf+0x360>
 72a:	05 c0       	rjmp	.+10     	; 0x736 <vfprintf+0x380>
 72c:	b7 01       	movw	r22, r14
 72e:	80 e2       	ldi	r24, 0x20	; 32
 730:	90 e0       	ldi	r25, 0x00	; 0
 732:	24 d0       	rcall	.+72     	; 0x77c <fputc>
 734:	3a 94       	dec	r3
 736:	31 10       	cpse	r3, r1
 738:	f9 cf       	rjmp	.-14     	; 0x72c <vfprintf+0x376>
 73a:	50 ce       	rjmp	.-864    	; 0x3dc <vfprintf+0x26>
 73c:	f7 01       	movw	r30, r14
 73e:	26 81       	ldd	r18, Z+6	; 0x06
 740:	37 81       	ldd	r19, Z+7	; 0x07
 742:	02 c0       	rjmp	.+4      	; 0x748 <vfprintf+0x392>
 744:	2f ef       	ldi	r18, 0xFF	; 255
 746:	3f ef       	ldi	r19, 0xFF	; 255
 748:	c9 01       	movw	r24, r18
 74a:	2c 96       	adiw	r28, 0x0c	; 12
 74c:	e2 e1       	ldi	r30, 0x12	; 18
 74e:	bc c0       	rjmp	.+376    	; 0x8c8 <__epilogue_restores__>

00000750 <strnlen_P>:
 750:	fc 01       	movw	r30, r24
 752:	05 90       	lpm	r0, Z+
 754:	61 50       	subi	r22, 0x01	; 1
 756:	70 40       	sbci	r23, 0x00	; 0
 758:	01 10       	cpse	r0, r1
 75a:	d8 f7       	brcc	.-10     	; 0x752 <strnlen_P+0x2>
 75c:	80 95       	com	r24
 75e:	90 95       	com	r25
 760:	8e 0f       	add	r24, r30
 762:	9f 1f       	adc	r25, r31
 764:	08 95       	ret

00000766 <strnlen>:
 766:	fc 01       	movw	r30, r24
 768:	61 50       	subi	r22, 0x01	; 1
 76a:	70 40       	sbci	r23, 0x00	; 0
 76c:	01 90       	ld	r0, Z+
 76e:	01 10       	cpse	r0, r1
 770:	d8 f7       	brcc	.-10     	; 0x768 <strnlen+0x2>
 772:	80 95       	com	r24
 774:	90 95       	com	r25
 776:	8e 0f       	add	r24, r30
 778:	9f 1f       	adc	r25, r31
 77a:	08 95       	ret

0000077c <fputc>:
 77c:	0f 93       	push	r16
 77e:	1f 93       	push	r17
 780:	cf 93       	push	r28
 782:	df 93       	push	r29
 784:	8c 01       	movw	r16, r24
 786:	eb 01       	movw	r28, r22
 788:	8b 81       	ldd	r24, Y+3	; 0x03
 78a:	81 fd       	sbrc	r24, 1
 78c:	03 c0       	rjmp	.+6      	; 0x794 <fputc+0x18>
 78e:	0f ef       	ldi	r16, 0xFF	; 255
 790:	1f ef       	ldi	r17, 0xFF	; 255
 792:	1a c0       	rjmp	.+52     	; 0x7c8 <fputc+0x4c>
 794:	82 ff       	sbrs	r24, 2
 796:	0d c0       	rjmp	.+26     	; 0x7b2 <fputc+0x36>
 798:	2e 81       	ldd	r18, Y+6	; 0x06
 79a:	3f 81       	ldd	r19, Y+7	; 0x07
 79c:	8c 81       	ldd	r24, Y+4	; 0x04
 79e:	9d 81       	ldd	r25, Y+5	; 0x05
 7a0:	28 17       	cp	r18, r24
 7a2:	39 07       	cpc	r19, r25
 7a4:	64 f4       	brge	.+24     	; 0x7be <fputc+0x42>
 7a6:	e8 81       	ld	r30, Y
 7a8:	f9 81       	ldd	r31, Y+1	; 0x01
 7aa:	01 93       	st	Z+, r16
 7ac:	f9 83       	std	Y+1, r31	; 0x01
 7ae:	e8 83       	st	Y, r30
 7b0:	06 c0       	rjmp	.+12     	; 0x7be <fputc+0x42>
 7b2:	e8 85       	ldd	r30, Y+8	; 0x08
 7b4:	f9 85       	ldd	r31, Y+9	; 0x09
 7b6:	80 2f       	mov	r24, r16
 7b8:	09 95       	icall
 7ba:	89 2b       	or	r24, r25
 7bc:	41 f7       	brne	.-48     	; 0x78e <fputc+0x12>
 7be:	8e 81       	ldd	r24, Y+6	; 0x06
 7c0:	9f 81       	ldd	r25, Y+7	; 0x07
 7c2:	01 96       	adiw	r24, 0x01	; 1
 7c4:	9f 83       	std	Y+7, r25	; 0x07
 7c6:	8e 83       	std	Y+6, r24	; 0x06
 7c8:	c8 01       	movw	r24, r16
 7ca:	df 91       	pop	r29
 7cc:	cf 91       	pop	r28
 7ce:	1f 91       	pop	r17
 7d0:	0f 91       	pop	r16
 7d2:	08 95       	ret

000007d4 <__ultoa_invert>:
 7d4:	fa 01       	movw	r30, r20
 7d6:	aa 27       	eor	r26, r26
 7d8:	28 30       	cpi	r18, 0x08	; 8
 7da:	51 f1       	breq	.+84     	; 0x830 <__ultoa_invert+0x5c>
 7dc:	20 31       	cpi	r18, 0x10	; 16
 7de:	81 f1       	breq	.+96     	; 0x840 <__ultoa_invert+0x6c>
 7e0:	e8 94       	clt
 7e2:	6f 93       	push	r22
 7e4:	6e 7f       	andi	r22, 0xFE	; 254
 7e6:	6e 5f       	subi	r22, 0xFE	; 254
 7e8:	7f 4f       	sbci	r23, 0xFF	; 255
 7ea:	8f 4f       	sbci	r24, 0xFF	; 255
 7ec:	9f 4f       	sbci	r25, 0xFF	; 255
 7ee:	af 4f       	sbci	r26, 0xFF	; 255
 7f0:	b1 e0       	ldi	r27, 0x01	; 1
 7f2:	3e d0       	rcall	.+124    	; 0x870 <__stack+0x11>
 7f4:	b4 e0       	ldi	r27, 0x04	; 4
 7f6:	3c d0       	rcall	.+120    	; 0x870 <__stack+0x11>
 7f8:	67 0f       	add	r22, r23
 7fa:	78 1f       	adc	r23, r24
 7fc:	89 1f       	adc	r24, r25
 7fe:	9a 1f       	adc	r25, r26
 800:	a1 1d       	adc	r26, r1
 802:	68 0f       	add	r22, r24
 804:	79 1f       	adc	r23, r25
 806:	8a 1f       	adc	r24, r26
 808:	91 1d       	adc	r25, r1
 80a:	a1 1d       	adc	r26, r1
 80c:	6a 0f       	add	r22, r26
 80e:	71 1d       	adc	r23, r1
 810:	81 1d       	adc	r24, r1
 812:	91 1d       	adc	r25, r1
 814:	a1 1d       	adc	r26, r1
 816:	20 d0       	rcall	.+64     	; 0x858 <__ultoa_invert+0x84>
 818:	09 f4       	brne	.+2      	; 0x81c <__ultoa_invert+0x48>
 81a:	68 94       	set
 81c:	3f 91       	pop	r19
 81e:	2a e0       	ldi	r18, 0x0A	; 10
 820:	26 9f       	mul	r18, r22
 822:	11 24       	eor	r1, r1
 824:	30 19       	sub	r19, r0
 826:	30 5d       	subi	r19, 0xD0	; 208
 828:	31 93       	st	Z+, r19
 82a:	de f6       	brtc	.-74     	; 0x7e2 <__ultoa_invert+0xe>
 82c:	cf 01       	movw	r24, r30
 82e:	08 95       	ret
 830:	46 2f       	mov	r20, r22
 832:	47 70       	andi	r20, 0x07	; 7
 834:	40 5d       	subi	r20, 0xD0	; 208
 836:	41 93       	st	Z+, r20
 838:	b3 e0       	ldi	r27, 0x03	; 3
 83a:	0f d0       	rcall	.+30     	; 0x85a <__ultoa_invert+0x86>
 83c:	c9 f7       	brne	.-14     	; 0x830 <__ultoa_invert+0x5c>
 83e:	f6 cf       	rjmp	.-20     	; 0x82c <__ultoa_invert+0x58>
 840:	46 2f       	mov	r20, r22
 842:	4f 70       	andi	r20, 0x0F	; 15
 844:	40 5d       	subi	r20, 0xD0	; 208
 846:	4a 33       	cpi	r20, 0x3A	; 58
 848:	18 f0       	brcs	.+6      	; 0x850 <__ultoa_invert+0x7c>
 84a:	49 5d       	subi	r20, 0xD9	; 217
 84c:	31 fd       	sbrc	r19, 1
 84e:	40 52       	subi	r20, 0x20	; 32
 850:	41 93       	st	Z+, r20
 852:	02 d0       	rcall	.+4      	; 0x858 <__ultoa_invert+0x84>
 854:	a9 f7       	brne	.-22     	; 0x840 <__ultoa_invert+0x6c>
 856:	ea cf       	rjmp	.-44     	; 0x82c <__ultoa_invert+0x58>
 858:	b4 e0       	ldi	r27, 0x04	; 4
 85a:	a6 95       	lsr	r26
 85c:	97 95       	ror	r25
 85e:	87 95       	ror	r24
 860:	77 95       	ror	r23
 862:	67 95       	ror	r22
 864:	ba 95       	dec	r27
 866:	c9 f7       	brne	.-14     	; 0x85a <__ultoa_invert+0x86>
 868:	00 97       	sbiw	r24, 0x00	; 0
 86a:	61 05       	cpc	r22, r1
 86c:	71 05       	cpc	r23, r1
 86e:	08 95       	ret
 870:	9b 01       	movw	r18, r22
 872:	ac 01       	movw	r20, r24
 874:	0a 2e       	mov	r0, r26
 876:	06 94       	lsr	r0
 878:	57 95       	ror	r21
 87a:	47 95       	ror	r20
 87c:	37 95       	ror	r19
 87e:	27 95       	ror	r18
 880:	ba 95       	dec	r27
 882:	c9 f7       	brne	.-14     	; 0x876 <__stack+0x17>
 884:	62 0f       	add	r22, r18
 886:	73 1f       	adc	r23, r19
 888:	84 1f       	adc	r24, r20
 88a:	95 1f       	adc	r25, r21
 88c:	a0 1d       	adc	r26, r0
 88e:	08 95       	ret

00000890 <__prologue_saves__>:
 890:	2f 92       	push	r2
 892:	3f 92       	push	r3
 894:	4f 92       	push	r4
 896:	5f 92       	push	r5
 898:	6f 92       	push	r6
 89a:	7f 92       	push	r7
 89c:	8f 92       	push	r8
 89e:	9f 92       	push	r9
 8a0:	af 92       	push	r10
 8a2:	bf 92       	push	r11
 8a4:	cf 92       	push	r12
 8a6:	df 92       	push	r13
 8a8:	ef 92       	push	r14
 8aa:	ff 92       	push	r15
 8ac:	0f 93       	push	r16
 8ae:	1f 93       	push	r17
 8b0:	cf 93       	push	r28
 8b2:	df 93       	push	r29
 8b4:	cd b7       	in	r28, 0x3d	; 61
 8b6:	de b7       	in	r29, 0x3e	; 62
 8b8:	ca 1b       	sub	r28, r26
 8ba:	db 0b       	sbc	r29, r27
 8bc:	0f b6       	in	r0, 0x3f	; 63
 8be:	f8 94       	cli
 8c0:	de bf       	out	0x3e, r29	; 62
 8c2:	0f be       	out	0x3f, r0	; 63
 8c4:	cd bf       	out	0x3d, r28	; 61
 8c6:	09 94       	ijmp

000008c8 <__epilogue_restores__>:
 8c8:	2a 88       	ldd	r2, Y+18	; 0x12
 8ca:	39 88       	ldd	r3, Y+17	; 0x11
 8cc:	48 88       	ldd	r4, Y+16	; 0x10
 8ce:	5f 84       	ldd	r5, Y+15	; 0x0f
 8d0:	6e 84       	ldd	r6, Y+14	; 0x0e
 8d2:	7d 84       	ldd	r7, Y+13	; 0x0d
 8d4:	8c 84       	ldd	r8, Y+12	; 0x0c
 8d6:	9b 84       	ldd	r9, Y+11	; 0x0b
 8d8:	aa 84       	ldd	r10, Y+10	; 0x0a
 8da:	b9 84       	ldd	r11, Y+9	; 0x09
 8dc:	c8 84       	ldd	r12, Y+8	; 0x08
 8de:	df 80       	ldd	r13, Y+7	; 0x07
 8e0:	ee 80       	ldd	r14, Y+6	; 0x06
 8e2:	fd 80       	ldd	r15, Y+5	; 0x05
 8e4:	0c 81       	ldd	r16, Y+4	; 0x04
 8e6:	1b 81       	ldd	r17, Y+3	; 0x03
 8e8:	aa 81       	ldd	r26, Y+2	; 0x02
 8ea:	b9 81       	ldd	r27, Y+1	; 0x01
 8ec:	ce 0f       	add	r28, r30
 8ee:	d1 1d       	adc	r29, r1
 8f0:	0f b6       	in	r0, 0x3f	; 63
 8f2:	f8 94       	cli
 8f4:	de bf       	out	0x3e, r29	; 62
 8f6:	0f be       	out	0x3f, r0	; 63
 8f8:	cd bf       	out	0x3d, r28	; 61
 8fa:	ed 01       	movw	r28, r26
 8fc:	08 95       	ret

000008fe <_exit>:
 8fe:	f8 94       	cli

00000900 <__stop_program>:
 900:	ff cf       	rjmp	.-2      	; 0x900 <__stop_program>
